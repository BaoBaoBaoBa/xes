/**
 * @ask for leave
 * @author Jay
 *
 */

/* Generate calendar structure */

function DF_DateAdd(interval, number, date, func) {
	number = parseInt(number);
	if (typeof(date) == "string") {
		var date = new Date(date.split("-")[0], date.split("-")[1], date.split("-")[2])
	}
	if (typeof(date) == "object") {
		var date = date
	}
	switch (interval) {
		case "y":
			return new Date(date.getFullYear() + number, date.getMonth(), date.getDate());
			break;
		case "m":
			return new Date(date.getFullYear(), date.getMonth() + number, checkDate(date.getFullYear(), date.getMonth() + number, date.getDate()));
			break;
		case "d":
			return new Date(date.getFullYear(), date.getMonth(), date.getDate() + number);
			break;
		case "w":
			return new Date(date.getFullYear(), date.getMonth(), 7 * number + date.getDate());
			break;
	}
	if (func) {
		return func
	};
}

function checkDate(year, month, date) {
	var enddate = ["31", "28", "31", "30", "31", "30", "31", "31", "30", "31", "30", "31"];
	var returnDate = "";
	if (year % 4 == 0) {
		enddate[1] = "29"
	}
	if (date > enddate[month]) {
		returnDate = enddate[month]
	} else {
		returnDate = date
	}
	return returnDate;
}

function WeekDay(date) {
	var theDate;
	if (typeof(date) == "string") {
		theDate = new Date(date.split("-")[0], date.split("-")[1], date.split("-")[2]);
	}
	if (typeof(date) == "object") {
		theDate = date
	}
	return theDate.getDay();
}

function DF_calender() {
	var lis = "";
	var style = "";
	var now;
	if (typeof(arguments[0]) == "string") {
		selectDate = arguments[0].split("-");
		var year = selectDate[0];
		var month = parseInt(selectDate[1]) - 1 + "";
		var date = selectDate[2];
		now = new Date(year, month, date);
	} else if (typeof(arguments[0]) == "object") {
		now = arguments[0];
	}
	var lastMonthEndDate = DF_DateAdd("d", "-1", now.getFullYear() + "-" + now.getMonth() + "-01").getDate();
	var lastMonthDate = WeekDay(now.getFullYear() + "-" + now.getMonth() + "-01");
	var thisMonthLastDate = DF_DateAdd("d", "-1", now.getFullYear() + "-" + (parseInt(now.getMonth()) + 1).toString() + "-01");
	var thisMonthEndDate = thisMonthLastDate.getDate();
	var thisMonthEndDay = thisMonthLastDate.getDay();
	var todayObj = new Date();
	today = todayObj.getFullYear() + "-" + todayObj.getMonth() + "-" + todayObj.getDate();
	for (i = 0; i < lastMonthDate; i++) { // Last Month's Date
		lis = "<li class='lastMonthDate'>" + lastMonthEndDate + "</li>" + lis;
		lastMonthEndDate--;
	}
	for (i = 1; i <= thisMonthEndDate; i++) { // Current Month's Date

		if (today == now.getFullYear() + "-" + now.getMonth() + "-" + i) {
			var todayString = now.getFullYear() + "-" + (parseInt(now.getMonth()) + 1).toString() + "-" + i;
			lis += "<li><span href=javascript:void(0) class='today' onclick='_selectThisDay(this)' title='" + now.getFullYear() + "-" + (parseInt(now.getMonth()) + 1) + "-" + i + "'>" + i + "</span></li>";
		} else {
			lis += "<li><span href=javascript:void(0) onclick='_selectThisDay(this)' title='" + now.getFullYear() + "-" + (parseInt(now.getMonth()) + 1) + "-" + i + "'>" + i + "</span></li>";
		}
	}
	var j = 1;
	for (i = thisMonthEndDay; i < 6; i++) { // Next Month's Date
		lis += "<li class='nextMonthDate'>" + j + "</li>";
		j++;
	}
	lis += style;
	var CalenderTitle = "<a href='javascript:void(0)' class='NextMonth' onclick=DF_calender(DF_DateAdd('m',1,'" + now.getFullYear() + "-" + now.getMonth() + "-" + now.getDate() + "'),this); title='Next Month'>&raquo;</a>";
	CalenderTitle += "<a href='javascript:void(0)' class='LastMonth' onclick=DF_calender(DF_DateAdd('m',-1,'" + now.getFullYear() + "-" + now.getMonth() + "-" + now.getDate() + "'),this); title='Previous Month'>&laquo;</a>";
	CalenderTitle += "<span class='selectThisYear'>" + now.getFullYear() + "</span>年&nbsp;&nbsp;<span class='selectThisMonth'>" + (parseInt(now.getMonth()) + 1).toString() + "</span>月";
	if (arguments.length > 1) {
		arguments[1].parentNode.parentNode.getElementsByTagName("ul")[1].innerHTML = lis;
		arguments[1].parentNode.innerHTML = CalenderTitle;
	} else {
		var CalenderBox = style + "<div class='calender'><div class='calenderTitle leave-calendar-head'>" + CalenderTitle + "</div><div class='calenderBody'><ul class='day leave-calendar-week'><li>日</li><li>一</li><li>二</li><li>三</li><li>四</li><li>五</li><li>六</li></ul><ul class='date leave-calendar-list' id='thisMonthDate'>" + lis + "</ul></div><div class='calenderBottom'></div></div>";
		return CalenderBox;
	}
}

function _selectThisDay(d) {
	var boxObj = d.parentNode.parentNode.parentNode.parentNode.parentNode;
}

function closeCalender(d) {
	var boxObj = d.parentNode.parentNode.parentNode;
	boxObj.parentNode.removeChild(boxObj);
}

function selectThisYear(obj) {
	DF_calender(obj.value + "-" + obj.parentNode.parentNode.getElementsByTagName("span")[0].getElementsByTagName("a")[0].innerHTML + "-1", obj.parentNode);
}

function selectThisMonth(obj) {
	DF_calender(obj.parentNode.parentNode.getElementsByTagName("span")[1].getElementsByTagName("a")[0].innerHTML + "-" + obj.value + "-1", obj.parentNode);
}

function DF_setDate(inputObj) {
	var calenderObj = document.createElement("span");
	calenderObj.innerHTML = DF_calender(new Date());
	calenderObj.style.position = "absolute";
	calenderObj.targetObj = inputObj;
	inputObj.parentNode.insertBefore(calenderObj, inputObj.nextSibling);
}

function DF_DateComparison(s, e) {
	var d1 = new Date(s.replace(/\-/g, "\/"));
	var d2 = new Date(e.replace(/\-/g, "\/"));
	if (d1 > d2) {
		alert("结束时间必须在开始时间之后!");
		return false;
	}
	return true;
}

var DFCalendar = function(c) {
	this.Version = 1.1;
	this.current = 'start';
	this.DOM = DF_calender(new Date());
	// this.startInput;
	// this.endInput;
	this.overDate = c.overDay;
	// this.today;
};
// 创建日期DOM
DFCalendar.prototype.Create = function() {
	this.wrap = $('.leave-html .leave-calendar-box');
	this.wrap.html(this.DOM);
	return this;
};
// 设置不能点击的日期
DFCalendar.prototype.setUnClickDate = function() {
	//this.today.prevAll('li').addClass('unClickDate');
};
DFCalendar.prototype.getToday = function() {
	var _Date = new Date(),
		_year = _Date.getYear() //获取当前年份(2位)
		,
		_fullYear = _Date.getFullYear() //获取完整的年份(4位,1970-????)
		,
		_month = _Date.getMonth() + 1 //获取当前月份(0-11,0代表1月)
		,
		_date = _Date.getDate() //获取当前日(1-31)
		,
		_day = _Date.getDay() //获取当前星期X(0-6,0代表星期天)
		,
		_time = _Date.getTime() //获取当前时间(从1970.1.1开始的毫秒数)
		,
		_hours = _Date.getHours() //获取当前小时数(0-23)
		,
		_minutes = _Date.getMinutes() //获取当前分钟数(0-59)
		,
		_seconds = _Date.getSeconds() //获取当前秒数(0-59)
		,
		_milliseconds = _Date.getMilliseconds() //获取当前毫秒数(0-999)
		,
		_dateString = _Date.toLocaleDateString() //获取当前日期
		;
	var _mytime = _Date.toLocaleTimeString(); //获取当前时间
	_Date.toLocaleString(); //获取日期与时间

	var _today = _fullYear + '-' + _month + '-' + _date;
	return _today;
}

// 结束日期是否在开始日期之后
DFCalendar.prototype.Comparison = function(s, e) {
	var _start = new Date(s.replace(/\-/g, "\/"));
	var _end = new Date(e.replace(/\-/g, "\/"));
	
	return (_start == _end || _start < _end);
};
// 返回日期差值
DFCalendar.prototype.Difference = function(s, e) {
	var _s1 = s,
		_s2 = e;
	_s1 = _s1.replace(/\-/g, "\/"), _s2 = _s2.replace(/\-/g, "\/");
	_s1 = new Date(_s1), _s2 = new Date(_s2);
	var _times = _s2.getTime() - _s1.getTime();
	var _days = parseInt(_times / (1000 * 60 * 60 * 24));
	return _days;
}
DFCalendar.prototype.setIsCan = function() {

	var _list = $('#thisMonthDate li'),
		_today = this.getToday(),
		_over = this.overDate;

	_list.not('.lastMonthDate,.nextMonthDate').each(function() {
		var _t = $(this).find('span').attr('title');
		var _a = _checkDifference(_today, _t);
		var _b = _checkDifference(_t, _over);
		if ((_a == 0 || _a > 0) && (_b > 0 || _b == 0)) {
			$(this).addClass('isCan');
		}
	});
};
DFCalendar.prototype.Init = function(con) {
	this.today = con.Today;
	this.setIsCan();
	this.startInput = con.InputStart;
	this.endInput = con.InputEnd;
	con.handle();
};
// 日期滑过效果
DFCalendar.prototype.setHover = function(d) {
	var _s = this.startInput.val(),
		_e = $(d).find('span').attr('title');
	if (_s) {
		var _c = this.Difference(_s, _e);
		if (_c > 0 && _c < 7) {
			$(d).addClass('onHover').prevUntil('li.onStartDay').addClass('onHover');
			$(d).nextAll('li').removeClass('onHover');
		}
	}
};
// 检查是否存在开始、结束日期
DFCalendar.prototype.checkDateInterval = function() {

};
// 设置起始日期
DFCalendar.prototype.setStartDate = function(d) {
	$(d).siblings('li').removeClass('onStartDay').removeClass('onEndDay').removeClass('onHover');
	$(d).addClass('onStartDay');
	var _start = $(d).find('span').attr('title')
	this.startInput.val(_start);
	this.endInput.val('');
	this.current = 'end';
	setLeaveListHover();
};
// 设置结束日期
DFCalendar.prototype.setEndDate = function(d) {
	// 开始日期
	var _d1 = this.startInput.val();
	// 点击日期
	var _d2 = $(d).find('span').attr('title');
	// 判断与开始日期之间是否为7天
	//var _startDay=$(d).prevUntil('.onStartDay');
	var _checkDay = this.Comparison(_d1, _d2);
	if (_checkDay) {
		var _d = DFC.Difference(_d1, _d2);
		if (_d > 6) {
			alert('最多只能请7天假', d);
		} else if (_d < 0) {
			alert('结束日期应该在起始日期之后', d);
			// 结束日期==开始日期
		} else if (_d == 0) {
			$(d).removeClass('onStartDay').addClass('onEndDay');
			this.endInput.val($(d).find('span').attr('title'));
			this.current = 'start';
			$(d).siblings('li').removeClass('onHover');
			setLeaveListHover('del');
		} else {
			$(d).removeClass('onStartDay').addClass('onEndDay');
			this.endInput.val($(d).find('span').attr('title'));
			$(d).prevUntil('.onStartDay').addClass('onHover');
			this.current = 'start';
			setLeaveListHover('del');
		}
	}
};
DFCalendar.prototype.clearStatus = function() {
	var _list = $('#thisMonthDate li');
	_list.removeClass('onStartDay');
	_list.removeClass('onEndDay');
	_list.removeClass('onHover');
};

DFCalendar.prototype.Submit = function() {
	var _vs = this.startInput.val();
	var _ve = this.endInput.val();
	//添加id参数
	var _vi = $('.leaveCourseId').val();
	if (_vs && _ve) {
		// $('.closeBtn').click();
		leaveAddDie();
		ajaxAskLeave(_vs, _ve, _vi);
		// setLeaveFunction(_vs, _ve, _vi);
	} else {
		alert('请选择起始日期');
	}
};
/*leave popup*/
var leaveWin = function(id, leave_enddate, lockCount) {
	$('.leave-html').empty();
	// if (lockCount > 2) {
	// 	lockCount = 2;
	// }
	// if (lockCount < 0) {
	// 	lockCount = 0;
	// }
	// var d = 2 - lockCount;
	var d = lockCount || 0;
	$('#redTime').html(d);
	$('.leave_enddate').html(leave_enddate);
	$('.leaveCourseId').val(id);
	var _con = $('.leave-box').html();


	// var _con = '<div class="leave-box hidden">'
	// 		+'		<div class="leave-title">'
	// 		+'			您还可以请假'
	// 		+'			<em id="redTime" class="red">2</em>'
	// 		+'			次，每次最多请假7天'
	// 		+'		</div>'
	// 		+'		<div class="leave-calendar">'
	// 		+'			<p class="leave-calendar-title">请选择您的假期日期</p>'
	// 		+'			<div class="leave-calendar-box"></div>'
	// 		+'		</div>'
	// 		+'		<div class="leave-form">'
	// 		+'		<form method="post" action="javascript:void(0);" name="leave_form">'
	// 		+'			<input type="text" class="leave_form_date leave_form_start" readonly="readonly">				'
	// 		+'			<label>至</label>'
	// 		+'			<input type="text" class="leave_form_date leave_form_end" readonly="readonly">				'
	// 		+'			<p class="leave-btn">'
	// 		+'				<button class="leave-form-submit btn btn_submit btn_red" type="submit" onclick="leaveSubmit();">确定</button>'
	// 		+'				<button class="leave-form-cancle btn btn_gray" type="reset">清空</button>'
	// 		+'			</p>'
	// 		+'		</form>'
	// 		+'		<p>'
	// 		+'			课程有效期至：'
	// 		+'			<em class="red leave_enddate">2013-08-02</em>'
	// 		+'		</p>'
	// 		+'		<dl class="leave-tips">'
	// 		+'			<dt>友情提示：</dt>'
	// 		+'			<dd>请假期间无法听课</dd>'
	// 		+'			<dd>点击销假可正常听课</dd>'
	// 		+'		</dl>'
	// 		+'		<input type="hidden" value="2011226" class="leaveCourseId"></div>'
	// 		+'	</div>';




	var config = {
		id   : 'leave',
		cls  : 'dialog_leave',
		width: 625,
		// height: 320,
		submit : false,
		cancel : false,
		title  : '我要请假',
		close  : function(){
			// DFC.current = 'start';
			DFC.clearStatus();
			window.DFC = null;
			// delete window.DFC;
			xue.win('leave').close();
		},
		// closeAction: 'block',
		content: '<div class="leave-html leave-win">' + _con + '</div>'
	}
	// $('.winBack').remove();
	// $('.winHtml').remove();
	var win_new = new xue.win(config);
	// win_new.show();
	createDFC();

	DFC.overDate = leave_enddate;
	DFC.Create().Init({
		Today: $('.leave-win .leave-calendar-box').find('.today').parent(),
		InputStart: $('.leave-win input.leave_form_start'),
		InputEnd: $('.leave-win input.leave_form_end'),
		handle: function() {
			leaveAddLive();
		}
	});
}

/* Check the date difference */

function _checkDifference(a, b) {
	return DFC.Difference(a, b);
}
/* Mouse over the date of the list of results 
 * @param del {String} : if del="del" then add $().die() ; else add $().live();
 */

function setLeaveListHover(del) {
	if (del == 'del') {
		$('body').off('mouseover', '#thisMonthDate li');
	} else {
		$('body').on('mouseover', '#thisMonthDate li', function() {
			if($(this).hasClass('isCan')){
				DFC.setHover(this);
			}
		});
	}
}

function leaveAddLive() {
	$('body').off('mousedown', '.leave-calendar-head a').on('mousedown', '.leave-calendar-head a', function() {
		setTimeout("DFC.setIsCan()", 200);
	});
	// $('body').on('click', '.leave-form-submit', function() {
	// 	DFC.Submit();
	// });
}

function leaveAddDie() {
	$('body').off('mousedown', '.leave-calendar-head a');
	// $('body').off('click', '.leave-form-submit');
}

/*
 * leave begin
 * @param {Object} {overDay:$('.leave_enddate'
 */
function createDFC(){
	window.DFC = new DFCalendar({
		overDay: $('.leave_enddate').text()
	});
	$('body').off('click', '#thisMonthDate li').on('click', '#thisMonthDate li', function() {
		if (!$(this).hasClass('lastMonthDate') && !$(this).hasClass('nextMonthDate')) {
			// 选择起始日期
			if ($(this).hasClass('isCan') && DFC.current == 'start') {
				DFC.setStartDate(this);
				// 结束日期
			} else {
				DFC.setEndDate(this);
			}
		}
	});
	$('body').off('click', '.leave-win .leave-form-cancle').on('click', '.leave-win .leave-form-cancle', function() {
		DFC.current = 'start';
		DFC.clearStatus();
	});
}
// (function() {

// })();
